version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: swarm_postgres
    environment:
      POSTGRES_DB: swarm_db
      POSTGRES_USER: swarm_user
      POSTGRES_PASSWORD: swarm_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - swarm_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U swarm_user -d swarm_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: swarm_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - swarm_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # Optional: Redis Commander for Redis management UI
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: swarm_redis_commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - swarm_network
    depends_on:
      - redis
    restart: unless-stopped

  # Optional: pgAdmin for PostgreSQL management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: swarm_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@swarm.local
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    networks:
      - swarm_network
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Multi-Agent Swarm Application
  swarm-app:
    build: .
    container_name: swarm_app
    environment:
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: swarm_db
      DB_USER: swarm_user
      DB_PASSWORD: swarm_password
      
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Anthropic API (set via .env file or environment)
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      ANTHROPIC_MODEL: claude-3-haiku-20240307
      
      # Other settings
      ENVIRONMENT: production
      DEBUG: "false"
    ports:
      - "8000:8000"
    networks:
      - swarm_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./docs:/app/docs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  swarm_network:
    driver: bridge
